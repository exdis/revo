<?php return array (
  'preserve_keys' => true,
  'update_object' => true,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'c617c632201f76d4f9e8515fe27480b7',
  'package' => 'modx',
  'class' => 'modPlugin',
  'signature' => '4e3551a867ae1069ad68bfdfffd692e1',
  'native_key' => 4,
  'object' => '{"id":4,"source":0,"property_preprocess":0,"name":"phpThumbOfCacheManager","description":"Handles cache cleaning when clearing the Site Cache.","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * phpThumbOf\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * phpThumbOf is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * phpThumbOf is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * phpThumbOf; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package phpthumbof\\n *\\/\\n\\/**\\n * Handles cache management for phpthumbof filter\\n *\\n * @var \\\\modX $modx\\n * @var array $scriptProperties\\n *\\n * @package phpthumbof\\n *\\/\\nif (empty($results)) $results = array();\\n\\nswitch ($modx->event->name) {\\n    case \'OnSiteRefresh\':\\n        if (!$modx->loadClass(\'modPhpThumb\',$modx->getOption(\'core_path\').\'model\\/phpthumb\\/\',true,true)) {\\n            $modx->log(modX::LOG_LEVEL_ERROR,\'[phpThumbOf] Could not load modPhpThumb class in plugin.\');\\n            return;\\n        }\\n        $assetsPath = $modx->getOption(\'phpthumbof.assets_path\',$scriptProperties,$modx->getOption(\'assets_path\').\'components\\/phpthumbof\\/\');\\n        $phpThumb = new modPhpThumb($modx);\\n        $cacheDir = $assetsPath.\'cache\\/\';\\n\\n        \\/* clear local cache *\\/\\n        if (!empty($cacheDir)) {\\n            \\/** @var DirectoryIterator $file *\\/\\n            foreach (new DirectoryIterator($cacheDir) as $file) {\\n                if (!$file->isFile()) continue;\\n                @unlink($file->getPathname());\\n            }\\n        }\\n\\n        \\/* if using amazon s3, clear our cache there *\\/\\n        $useS3 = $modx->getOption(\'phpthumbof.use_s3\',$scriptProperties,false);\\n        if ($useS3) {\\n            $modelPath = $modx->getOption(\'phpthumbof.core_path\',null,$modx->getOption(\'core_path\').\'components\\/phpthumbof\\/\').\'model\\/\';\\n            \\/** @var modAws $modaws *\\/\\n            $modaws = $modx->getService(\'modaws\',\'modAws\',$modelPath.\'aws\\/\',$scriptProperties);\\n            $s3path = $modx->getOption(\'phpthumbof.s3_path\',null,\'phpthumbof\\/\');\\n            \\n            $list = $modaws->getObjectList($s3path);\\n            if (!empty($list) && is_array($list)) {\\n                foreach ($list as $obj) {\\n                    if (empty($obj->Key)) continue;\\n\\n                    $results[] = $modaws->deleteObject($obj->Key);\\n                }\\n            }\\n        }\\n\\n        break;\\n}\\nreturn;","locked":0,"properties":null,"disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * phpThumbOf\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * phpThumbOf is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * phpThumbOf is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * phpThumbOf; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package phpthumbof\\n *\\/\\n\\/**\\n * Handles cache management for phpthumbof filter\\n *\\n * @var \\\\modX $modx\\n * @var array $scriptProperties\\n *\\n * @package phpthumbof\\n *\\/\\nif (empty($results)) $results = array();\\n\\nswitch ($modx->event->name) {\\n    case \'OnSiteRefresh\':\\n        if (!$modx->loadClass(\'modPhpThumb\',$modx->getOption(\'core_path\').\'model\\/phpthumb\\/\',true,true)) {\\n            $modx->log(modX::LOG_LEVEL_ERROR,\'[phpThumbOf] Could not load modPhpThumb class in plugin.\');\\n            return;\\n        }\\n        $assetsPath = $modx->getOption(\'phpthumbof.assets_path\',$scriptProperties,$modx->getOption(\'assets_path\').\'components\\/phpthumbof\\/\');\\n        $phpThumb = new modPhpThumb($modx);\\n        $cacheDir = $assetsPath.\'cache\\/\';\\n\\n        \\/* clear local cache *\\/\\n        if (!empty($cacheDir)) {\\n            \\/** @var DirectoryIterator $file *\\/\\n            foreach (new DirectoryIterator($cacheDir) as $file) {\\n                if (!$file->isFile()) continue;\\n                @unlink($file->getPathname());\\n            }\\n        }\\n\\n        \\/* if using amazon s3, clear our cache there *\\/\\n        $useS3 = $modx->getOption(\'phpthumbof.use_s3\',$scriptProperties,false);\\n        if ($useS3) {\\n            $modelPath = $modx->getOption(\'phpthumbof.core_path\',null,$modx->getOption(\'core_path\').\'components\\/phpthumbof\\/\').\'model\\/\';\\n            \\/** @var modAws $modaws *\\/\\n            $modaws = $modx->getService(\'modaws\',\'modAws\',$modelPath.\'aws\\/\',$scriptProperties);\\n            $s3path = $modx->getOption(\'phpthumbof.s3_path\',null,\'phpthumbof\\/\');\\n            \\n            $list = $modaws->getObjectList($s3path);\\n            if (!empty($list) && is_array($list)) {\\n                foreach ($list as $obj) {\\n                    if (empty($obj->Key)) continue;\\n\\n                    $results[] = $modaws->deleteObject($obj->Key);\\n                }\\n            }\\n        }\\n\\n        break;\\n}\\nreturn;"}',
);